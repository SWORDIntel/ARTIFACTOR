# Prometheus Alerting Rules for Etherscan API
# Production monitoring and alerting rules

groups:
  - name: etherscan-api.rules
    rules:
      # ===================================================================
      # Application Health Rules
      # ===================================================================
      - alert: EtherscanAPIDown
        expr: up{job="etherscan-api"} == 0
        for: 30s
        labels:
          severity: critical
          service: etherscan-api
        annotations:
          summary: "Etherscan API is down"
          description: "Etherscan API has been down for more than 30 seconds."

      - alert: EtherscanAPIHighErrorRate
        expr: rate(etherscan_requests_total{status=~"5.."}[5m]) > 0.1
        for: 2m
        labels:
          severity: warning
          service: etherscan-api
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value }} errors per second for the last 5 minutes."

      # ===================================================================
      # Performance Rules
      # ===================================================================
      - alert: EtherscanAPIHighLatency
        expr: histogram_quantile(0.95, rate(etherscan_request_duration_seconds_bucket[5m])) > 1.0
        for: 5m
        labels:
          severity: warning
          service: etherscan-api
        annotations:
          summary: "High API latency detected"
          description: "95th percentile latency is {{ $value }} seconds for the last 5 minutes."

      - alert: EtherscanAPIHighMemoryUsage
        expr: (container_memory_usage_bytes{name="etherscan-api"} / container_spec_memory_limit_bytes{name="etherscan-api"}) * 100 > 80
        for: 5m
        labels:
          severity: warning
          service: etherscan-api
        annotations:
          summary: "High memory usage"
          description: "Memory usage is at {{ $value }}% of the limit."

      - alert: EtherscanAPIHighCPUUsage
        expr: rate(container_cpu_usage_seconds_total{name="etherscan-api"}[5m]) * 100 > 80
        for: 10m
        labels:
          severity: warning
          service: etherscan-api
        annotations:
          summary: "High CPU usage"
          description: "CPU usage is at {{ $value }}% for the last 10 minutes."

      # ===================================================================
      # Rate Limiting Rules
      # ===================================================================
      - alert: EtherscanAPIRateLimitHits
        expr: rate(etherscan_rate_limit_hits_total[5m]) > 0.5
        for: 2m
        labels:
          severity: warning
          service: etherscan-api
        annotations:
          summary: "High rate limit hits"
          description: "Rate limit is being hit {{ $value }} times per second."

      # ===================================================================
      # External API Rules
      # ===================================================================
      - alert: EtherscanExternalAPIErrors
        expr: rate(etherscan_api_calls_total{status="error"}[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
          service: etherscan-api
        annotations:
          summary: "High external API error rate"
          description: "External Etherscan API errors at {{ $value }} per second."

      - alert: EtherscanExternalAPILatency
        expr: histogram_quantile(0.95, rate(etherscan_api_duration_seconds_bucket[5m])) > 5.0
        for: 5m
        labels:
          severity: warning
          service: etherscan-api
        annotations:
          summary: "High external API latency"
          description: "95th percentile external API latency is {{ $value }} seconds."

  # ===================================================================
  # Infrastructure Health Rules
  # ===================================================================
  - name: infrastructure.rules
    rules:
      - alert: NodeExporterDown
        expr: up{job="node-exporter"} == 0
        for: 1m
        labels:
          severity: warning
          service: infrastructure
        annotations:
          summary: "Node Exporter is down"
          description: "Node Exporter has been down for more than 1 minute."

      - alert: HighDiskUsage
        expr: (node_filesystem_avail_bytes{fstype!="tmpfs"} / node_filesystem_size_bytes{fstype!="tmpfs"}) * 100 < 20
        for: 5m
        labels:
          severity: warning
          service: infrastructure
        annotations:
          summary: "Disk space running low"
          description: "Disk usage is above 80% on {{ $labels.device }}."

      - alert: HighMemoryUsage
        expr: (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes) * 100 < 20
        for: 10m
        labels:
          severity: warning
          service: infrastructure
        annotations:
          summary: "High memory usage on host"
          description: "Memory usage is above 80% for 10 minutes."

  # ===================================================================
  # Redis Rules
  # ===================================================================
  - name: redis.rules
    rules:
      - alert: RedisDown
        expr: up{job="redis"} == 0
        for: 30s
        labels:
          severity: critical
          service: redis
        annotations:
          summary: "Redis is down"
          description: "Redis instance has been down for more than 30 seconds."

      - alert: RedisHighMemoryUsage
        expr: redis_memory_used_bytes / redis_memory_max_bytes * 100 > 90
        for: 5m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Redis high memory usage"
          description: "Redis memory usage is at {{ $value }}%."

  # ===================================================================
  # Recording Rules for Dashboards
  # ===================================================================
  - name: recording.rules
    rules:
      # Request rate
      - record: etherscan:request_rate
        expr: rate(etherscan_requests_total[5m])

      # Error rate
      - record: etherscan:error_rate
        expr: rate(etherscan_requests_total{status=~"5.."}[5m])

      # Success rate
      - record: etherscan:success_rate
        expr: rate(etherscan_requests_total{status=~"2.."}[5m])

      # Average response time
      - record: etherscan:avg_response_time
        expr: rate(etherscan_request_duration_seconds_sum[5m]) / rate(etherscan_request_duration_seconds_count[5m])

      # External API success rate
      - record: etherscan:external_api_success_rate
        expr: rate(etherscan_api_calls_total{status="success"}[5m]) / rate(etherscan_api_calls_total[5m])