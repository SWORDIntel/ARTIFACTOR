# ARTIFACTOR v3.0 - Main Application Configuration
# Reverse proxy configuration for the complete application

server {
    listen 80;
    server_name _;

    # Security headers for HTTP
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Redirect HTTP to HTTPS in production
    # Uncomment for production deployment
    # return 301 https://$server_name$request_uri;

    # For development, serve directly over HTTP
    location / {
        include /etc/nginx/conf.d/locations/frontend.conf;
    }

    location /api/ {
        include /etc/nginx/conf.d/locations/backend.conf;
    }

    location /ws {
        include /etc/nginx/conf.d/locations/websocket.conf;
    }

    location /ml/ {
        include /etc/nginx/conf.d/locations/ml-service.conf;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

server {
    listen 443 ssl http2;
    server_name _;

    # SSL Certificate
    ssl_certificate /etc/nginx/ssl/artifactor.crt;
    ssl_certificate_key /etc/nginx/ssl/artifactor.key;

    # SSL Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Connection limiting
    limit_conn addr 50;

    # =====================================
    # FRONTEND (React Application)
    # =====================================
    location / {
        include /etc/nginx/conf.d/locations/frontend.conf;
    }

    # =====================================
    # BACKEND API
    # =====================================
    location /api/ {
        include /etc/nginx/conf.d/locations/backend.conf;
    }

    # =====================================
    # WEBSOCKET
    # =====================================
    location /ws {
        include /etc/nginx/conf.d/locations/websocket.conf;
    }

    # =====================================
    # ML SERVICE
    # =====================================
    location /ml/ {
        include /etc/nginx/conf.d/locations/ml-service.conf;
    }

    # =====================================
    # STATIC ASSETS
    # =====================================
    location /static/ {
        include /etc/nginx/conf.d/locations/static.conf;
    }

    # =====================================
    # FILE UPLOADS/DOWNLOADS
    # =====================================
    location /uploads/ {
        include /etc/nginx/conf.d/locations/uploads.conf;
    }

    location /downloads/ {
        include /etc/nginx/conf.d/locations/downloads.conf;
    }

    # =====================================
    # MONITORING
    # =====================================
    location /metrics {
        include /etc/nginx/conf.d/locations/metrics.conf;
    }

    # =====================================
    # HEALTH CHECKS
    # =====================================
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Backend health
    location /api/health {
        proxy_pass http://backend/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache off;
        access_log off;
    }

    # ML service health
    location /ml/health {
        proxy_pass http://ml-service/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache off;
        access_log off;
    }

    # =====================================
    # SECURITY
    # =====================================
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to backup files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # =====================================
    # ERROR PAGES
    # =====================================
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }

    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}